{
  "version": 3,
  "sources": ["../../ant-design-vue/es/badge/style/index.js"],
  "sourcesContent": ["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { Keyframes } from '../../_util/cssinjs';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { genPresetColor, resetComponent } from '../../style';\nconst antStatusProcessing = new Keyframes('antStatusProcessing', {\n  '0%': {\n    transform: 'scale(0.8)',\n    opacity: 0.5\n  },\n  '100%': {\n    transform: 'scale(2.4)',\n    opacity: 0\n  }\n});\nconst antZoomBadgeIn = new Keyframes('antZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  }\n});\nconst antZoomBadgeOut = new Keyframes('antZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  },\n  '100%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  }\n});\nconst antNoWrapperZoomBadgeIn = new Keyframes('antNoWrapperZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1)'\n  }\n});\nconst antNoWrapperZoomBadgeOut = new Keyframes('antNoWrapperZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1)'\n  },\n  '100%': {\n    transform: 'scale(0)',\n    opacity: 0\n  }\n});\nconst antBadgeLoadingCircle = new Keyframes('antBadgeLoadingCircle', {\n  '0%': {\n    transformOrigin: '50%'\n  },\n  '100%': {\n    transform: 'translate(50%, -50%) rotate(360deg)',\n    transformOrigin: '50%'\n  }\n});\nconst genSharedBadgeStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    antCls,\n    badgeFontHeight,\n    badgeShadowSize,\n    badgeHeightSm,\n    motionDurationSlow,\n    badgeStatusSize,\n    marginXS,\n    badgeRibbonOffset\n  } = token;\n  const numberPrefixCls = `${antCls}-scroll-number`;\n  const ribbonPrefixCls = `${antCls}-ribbon`;\n  const ribbonWrapperPrefixCls = `${antCls}-ribbon-wrapper`;\n  const colorPreset = genPresetColor(token, (colorKey, _ref) => {\n    let {\n      darkColor\n    } = _ref;\n    return {\n      [`&${componentCls} ${componentCls}-color-${colorKey}`]: {\n        background: darkColor,\n        [`&:not(${componentCls}-count)`]: {\n          color: darkColor\n        }\n      }\n    };\n  });\n  const statusRibbonPreset = genPresetColor(token, (colorKey, _ref2) => {\n    let {\n      darkColor\n    } = _ref2;\n    return {\n      [`&${ribbonPrefixCls}-color-${colorKey}`]: {\n        background: darkColor,\n        color: darkColor\n      }\n    };\n  });\n  return {\n    [componentCls]: _extends(_extends(_extends(_extends({}, resetComponent(token)), {\n      position: 'relative',\n      display: 'inline-block',\n      width: 'fit-content',\n      lineHeight: 1,\n      [`${componentCls}-count`]: {\n        zIndex: token.badgeZIndex,\n        minWidth: token.badgeHeight,\n        height: token.badgeHeight,\n        color: token.badgeTextColor,\n        fontWeight: token.badgeFontWeight,\n        fontSize: token.badgeFontSize,\n        lineHeight: `${token.badgeHeight}px`,\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        background: token.badgeColor,\n        borderRadius: token.badgeHeight / 2,\n        boxShadow: `0 0 0 ${badgeShadowSize}px ${token.badgeShadowColor}`,\n        transition: `background ${token.motionDurationMid}`,\n        a: {\n          color: token.badgeTextColor\n        },\n        'a:hover': {\n          color: token.badgeTextColor\n        },\n        'a:hover &': {\n          background: token.badgeColorHover\n        }\n      },\n      [`${componentCls}-count-sm`]: {\n        minWidth: badgeHeightSm,\n        height: badgeHeightSm,\n        fontSize: token.badgeFontSizeSm,\n        lineHeight: `${badgeHeightSm}px`,\n        borderRadius: badgeHeightSm / 2\n      },\n      [`${componentCls}-multiple-words`]: {\n        padding: `0 ${token.paddingXS}px`\n      },\n      [`${componentCls}-dot`]: {\n        zIndex: token.badgeZIndex,\n        width: token.badgeDotSize,\n        minWidth: token.badgeDotSize,\n        height: token.badgeDotSize,\n        background: token.badgeColor,\n        borderRadius: '100%',\n        boxShadow: `0 0 0 ${badgeShadowSize}px ${token.badgeShadowColor}`\n      },\n      [`${componentCls}-dot${numberPrefixCls}`]: {\n        transition: `background ${motionDurationSlow}`\n      },\n      [`${componentCls}-count, ${componentCls}-dot, ${numberPrefixCls}-custom-component`]: {\n        position: 'absolute',\n        top: 0,\n        insetInlineEnd: 0,\n        transform: 'translate(50%, -50%)',\n        transformOrigin: '100% 0%',\n        [`&${iconCls}-spin`]: {\n          animationName: antBadgeLoadingCircle,\n          animationDuration: '1s',\n          animationIterationCount: 'infinite',\n          animationTimingFunction: 'linear'\n        }\n      },\n      [`&${componentCls}-status`]: {\n        lineHeight: 'inherit',\n        verticalAlign: 'baseline',\n        [`${componentCls}-status-dot`]: {\n          position: 'relative',\n          top: -1,\n          display: 'inline-block',\n          width: badgeStatusSize,\n          height: badgeStatusSize,\n          verticalAlign: 'middle',\n          borderRadius: '50%'\n        },\n        [`${componentCls}-status-success`]: {\n          backgroundColor: token.colorSuccess\n        },\n        [`${componentCls}-status-processing`]: {\n          overflow: 'visible',\n          color: token.colorPrimary,\n          backgroundColor: token.colorPrimary,\n          '&::after': {\n            position: 'absolute',\n            top: 0,\n            insetInlineStart: 0,\n            width: '100%',\n            height: '100%',\n            borderWidth: badgeShadowSize,\n            borderStyle: 'solid',\n            borderColor: 'inherit',\n            borderRadius: '50%',\n            animationName: antStatusProcessing,\n            animationDuration: token.badgeProcessingDuration,\n            animationIterationCount: 'infinite',\n            animationTimingFunction: 'ease-in-out',\n            content: '\"\"'\n          }\n        },\n        [`${componentCls}-status-default`]: {\n          backgroundColor: token.colorTextPlaceholder\n        },\n        [`${componentCls}-status-error`]: {\n          backgroundColor: token.colorError\n        },\n        [`${componentCls}-status-warning`]: {\n          backgroundColor: token.colorWarning\n        },\n        [`${componentCls}-status-text`]: {\n          marginInlineStart: marginXS,\n          color: token.colorText,\n          fontSize: token.fontSize\n        }\n      }\n    }), colorPreset), {\n      [`${componentCls}-zoom-appear, ${componentCls}-zoom-enter`]: {\n        animationName: antZoomBadgeIn,\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: token.motionEaseOutBack,\n        animationFillMode: 'both'\n      },\n      [`${componentCls}-zoom-leave`]: {\n        animationName: antZoomBadgeOut,\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: token.motionEaseOutBack,\n        animationFillMode: 'both'\n      },\n      [`&${componentCls}-not-a-wrapper`]: {\n        [`${componentCls}-zoom-appear, ${componentCls}-zoom-enter`]: {\n          animationName: antNoWrapperZoomBadgeIn,\n          animationDuration: token.motionDurationSlow,\n          animationTimingFunction: token.motionEaseOutBack\n        },\n        [`${componentCls}-zoom-leave`]: {\n          animationName: antNoWrapperZoomBadgeOut,\n          animationDuration: token.motionDurationSlow,\n          animationTimingFunction: token.motionEaseOutBack\n        },\n        [`&:not(${componentCls}-status)`]: {\n          verticalAlign: 'middle'\n        },\n        [`${numberPrefixCls}-custom-component, ${componentCls}-count`]: {\n          transform: 'none'\n        },\n        [`${numberPrefixCls}-custom-component, ${numberPrefixCls}`]: {\n          position: 'relative',\n          top: 'auto',\n          display: 'block',\n          transformOrigin: '50% 50%'\n        }\n      },\n      [`${numberPrefixCls}`]: {\n        overflow: 'hidden',\n        [`${numberPrefixCls}-only`]: {\n          position: 'relative',\n          display: 'inline-block',\n          height: token.badgeHeight,\n          transition: `all ${token.motionDurationSlow} ${token.motionEaseOutBack}`,\n          WebkitTransformStyle: 'preserve-3d',\n          WebkitBackfaceVisibility: 'hidden',\n          [`> p${numberPrefixCls}-only-unit`]: {\n            height: token.badgeHeight,\n            margin: 0,\n            WebkitTransformStyle: 'preserve-3d',\n            WebkitBackfaceVisibility: 'hidden'\n          }\n        },\n        [`${numberPrefixCls}-symbol`]: {\n          verticalAlign: 'top'\n        }\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl',\n        [`${componentCls}-count, ${componentCls}-dot, ${numberPrefixCls}-custom-component`]: {\n          transform: 'translate(-50%, -50%)'\n        }\n      }\n    }),\n    [`${ribbonWrapperPrefixCls}`]: {\n      position: 'relative'\n    },\n    [`${ribbonPrefixCls}`]: _extends(_extends(_extends(_extends({}, resetComponent(token)), {\n      position: 'absolute',\n      top: marginXS,\n      padding: `0 ${token.paddingXS}px`,\n      color: token.colorPrimary,\n      lineHeight: `${badgeFontHeight}px`,\n      whiteSpace: 'nowrap',\n      backgroundColor: token.colorPrimary,\n      borderRadius: token.borderRadiusSM,\n      [`${ribbonPrefixCls}-text`]: {\n        color: token.colorTextLightSolid\n      },\n      [`${ribbonPrefixCls}-corner`]: {\n        position: 'absolute',\n        top: '100%',\n        width: badgeRibbonOffset,\n        height: badgeRibbonOffset,\n        color: 'currentcolor',\n        border: `${badgeRibbonOffset / 2}px solid`,\n        transform: token.badgeRibbonCornerTransform,\n        transformOrigin: 'top',\n        filter: token.badgeRibbonCornerFilter\n      }\n    }), statusRibbonPreset), {\n      [`&${ribbonPrefixCls}-placement-end`]: {\n        insetInlineEnd: -badgeRibbonOffset,\n        borderEndEndRadius: 0,\n        [`${ribbonPrefixCls}-corner`]: {\n          insetInlineEnd: 0,\n          borderInlineEndColor: 'transparent',\n          borderBlockEndColor: 'transparent'\n        }\n      },\n      [`&${ribbonPrefixCls}-placement-start`]: {\n        insetInlineStart: -badgeRibbonOffset,\n        borderEndStartRadius: 0,\n        [`${ribbonPrefixCls}-corner`]: {\n          insetInlineStart: 0,\n          borderBlockEndColor: 'transparent',\n          borderInlineStartColor: 'transparent'\n        }\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl'\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Badge', token => {\n  const {\n    fontSize,\n    lineHeight,\n    fontSizeSM,\n    lineWidth,\n    marginXS,\n    colorBorderBg\n  } = token;\n  const badgeFontHeight = Math.round(fontSize * lineHeight);\n  const badgeShadowSize = lineWidth;\n  const badgeZIndex = 'auto';\n  const badgeHeight = badgeFontHeight - 2 * badgeShadowSize;\n  const badgeTextColor = token.colorBgContainer;\n  const badgeFontWeight = 'normal';\n  const badgeFontSize = fontSizeSM;\n  const badgeColor = token.colorError;\n  const badgeColorHover = token.colorErrorHover;\n  const badgeHeightSm = fontSize;\n  const badgeDotSize = fontSizeSM / 2;\n  const badgeFontSizeSm = fontSizeSM;\n  const badgeStatusSize = fontSizeSM / 2;\n  const badgeToken = mergeToken(token, {\n    badgeFontHeight,\n    badgeShadowSize,\n    badgeZIndex,\n    badgeHeight,\n    badgeTextColor,\n    badgeFontWeight,\n    badgeFontSize,\n    badgeColor,\n    badgeColorHover,\n    badgeShadowColor: colorBorderBg,\n    badgeHeightSm,\n    badgeDotSize,\n    badgeFontSizeSm,\n    badgeStatusSize,\n    badgeProcessingDuration: '1.2s',\n    badgeRibbonOffset: marginXS,\n    // Follow token just by Design. Not related with token\n    badgeRibbonCornerTransform: 'scaleY(0.75)',\n    badgeRibbonCornerFilter: `brightness(75%)`\n  });\n  return [genSharedBadgeStyle(badgeToken)];\n});"],
  "mappings": ";;;;;;;;;;;;AAIA,IAAM,sBAAsB,IAAI,kBAAU,uBAAuB;AAAA,EAC/D,MAAM;AAAA,IACJ,WAAW;AAAA,IACX,SAAS;AAAA,EACX;AAAA,EACA,QAAQ;AAAA,IACN,WAAW;AAAA,IACX,SAAS;AAAA,EACX;AACF,CAAC;AACD,IAAM,iBAAiB,IAAI,kBAAU,kBAAkB;AAAA,EACrD,MAAM;AAAA,IACJ,WAAW;AAAA,IACX,SAAS;AAAA,EACX;AAAA,EACA,QAAQ;AAAA,IACN,WAAW;AAAA,EACb;AACF,CAAC;AACD,IAAM,kBAAkB,IAAI,kBAAU,mBAAmB;AAAA,EACvD,MAAM;AAAA,IACJ,WAAW;AAAA,EACb;AAAA,EACA,QAAQ;AAAA,IACN,WAAW;AAAA,IACX,SAAS;AAAA,EACX;AACF,CAAC;AACD,IAAM,0BAA0B,IAAI,kBAAU,2BAA2B;AAAA,EACvE,MAAM;AAAA,IACJ,WAAW;AAAA,IACX,SAAS;AAAA,EACX;AAAA,EACA,QAAQ;AAAA,IACN,WAAW;AAAA,EACb;AACF,CAAC;AACD,IAAM,2BAA2B,IAAI,kBAAU,4BAA4B;AAAA,EACzE,MAAM;AAAA,IACJ,WAAW;AAAA,EACb;AAAA,EACA,QAAQ;AAAA,IACN,WAAW;AAAA,IACX,SAAS;AAAA,EACX;AACF,CAAC;AACD,IAAM,wBAAwB,IAAI,kBAAU,yBAAyB;AAAA,EACnE,MAAM;AAAA,IACJ,iBAAiB;AAAA,EACnB;AAAA,EACA,QAAQ;AAAA,IACN,WAAW;AAAA,IACX,iBAAiB;AAAA,EACnB;AACF,CAAC;AACD,IAAM,sBAAsB,WAAS;AACnC,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,kBAAkB,GAAG,MAAM;AACjC,QAAM,kBAAkB,GAAG,MAAM;AACjC,QAAM,yBAAyB,GAAG,MAAM;AACxC,QAAM,cAAc,eAAe,OAAO,CAAC,UAAU,SAAS;AAC5D,QAAI;AAAA,MACF;AAAA,IACF,IAAI;AACJ,WAAO;AAAA,MACL,CAAC,IAAI,YAAY,IAAI,YAAY,UAAU,QAAQ,EAAE,GAAG;AAAA,QACtD,YAAY;AAAA,QACZ,CAAC,SAAS,YAAY,SAAS,GAAG;AAAA,UAChC,OAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAAA,EACF,CAAC;AACD,QAAM,qBAAqB,eAAe,OAAO,CAAC,UAAU,UAAU;AACpE,QAAI;AAAA,MACF;AAAA,IACF,IAAI;AACJ,WAAO;AAAA,MACL,CAAC,IAAI,eAAe,UAAU,QAAQ,EAAE,GAAG;AAAA,QACzC,YAAY;AAAA,QACZ,OAAO;AAAA,MACT;AAAA,IACF;AAAA,EACF,CAAC;AACD,SAAO;AAAA,IACL,CAAC,YAAY,GAAG,SAAS,SAAS,SAAS,SAAS,CAAC,GAAG,eAAe,KAAK,CAAC,GAAG;AAAA,MAC9E,UAAU;AAAA,MACV,SAAS;AAAA,MACT,OAAO;AAAA,MACP,YAAY;AAAA,MACZ,CAAC,GAAG,YAAY,QAAQ,GAAG;AAAA,QACzB,QAAQ,MAAM;AAAA,QACd,UAAU,MAAM;AAAA,QAChB,QAAQ,MAAM;AAAA,QACd,OAAO,MAAM;AAAA,QACb,YAAY,MAAM;AAAA,QAClB,UAAU,MAAM;AAAA,QAChB,YAAY,GAAG,MAAM,WAAW;AAAA,QAChC,YAAY;AAAA,QACZ,WAAW;AAAA,QACX,YAAY,MAAM;AAAA,QAClB,cAAc,MAAM,cAAc;AAAA,QAClC,WAAW,SAAS,eAAe,MAAM,MAAM,gBAAgB;AAAA,QAC/D,YAAY,cAAc,MAAM,iBAAiB;AAAA,QACjD,GAAG;AAAA,UACD,OAAO,MAAM;AAAA,QACf;AAAA,QACA,WAAW;AAAA,UACT,OAAO,MAAM;AAAA,QACf;AAAA,QACA,aAAa;AAAA,UACX,YAAY,MAAM;AAAA,QACpB;AAAA,MACF;AAAA,MACA,CAAC,GAAG,YAAY,WAAW,GAAG;AAAA,QAC5B,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,UAAU,MAAM;AAAA,QAChB,YAAY,GAAG,aAAa;AAAA,QAC5B,cAAc,gBAAgB;AAAA,MAChC;AAAA,MACA,CAAC,GAAG,YAAY,iBAAiB,GAAG;AAAA,QAClC,SAAS,KAAK,MAAM,SAAS;AAAA,MAC/B;AAAA,MACA,CAAC,GAAG,YAAY,MAAM,GAAG;AAAA,QACvB,QAAQ,MAAM;AAAA,QACd,OAAO,MAAM;AAAA,QACb,UAAU,MAAM;AAAA,QAChB,QAAQ,MAAM;AAAA,QACd,YAAY,MAAM;AAAA,QAClB,cAAc;AAAA,QACd,WAAW,SAAS,eAAe,MAAM,MAAM,gBAAgB;AAAA,MACjE;AAAA,MACA,CAAC,GAAG,YAAY,OAAO,eAAe,EAAE,GAAG;AAAA,QACzC,YAAY,cAAc,kBAAkB;AAAA,MAC9C;AAAA,MACA,CAAC,GAAG,YAAY,WAAW,YAAY,SAAS,eAAe,mBAAmB,GAAG;AAAA,QACnF,UAAU;AAAA,QACV,KAAK;AAAA,QACL,gBAAgB;AAAA,QAChB,WAAW;AAAA,QACX,iBAAiB;AAAA,QACjB,CAAC,IAAI,OAAO,OAAO,GAAG;AAAA,UACpB,eAAe;AAAA,UACf,mBAAmB;AAAA,UACnB,yBAAyB;AAAA,UACzB,yBAAyB;AAAA,QAC3B;AAAA,MACF;AAAA,MACA,CAAC,IAAI,YAAY,SAAS,GAAG;AAAA,QAC3B,YAAY;AAAA,QACZ,eAAe;AAAA,QACf,CAAC,GAAG,YAAY,aAAa,GAAG;AAAA,UAC9B,UAAU;AAAA,UACV,KAAK;AAAA,UACL,SAAS;AAAA,UACT,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,eAAe;AAAA,UACf,cAAc;AAAA,QAChB;AAAA,QACA,CAAC,GAAG,YAAY,iBAAiB,GAAG;AAAA,UAClC,iBAAiB,MAAM;AAAA,QACzB;AAAA,QACA,CAAC,GAAG,YAAY,oBAAoB,GAAG;AAAA,UACrC,UAAU;AAAA,UACV,OAAO,MAAM;AAAA,UACb,iBAAiB,MAAM;AAAA,UACvB,YAAY;AAAA,YACV,UAAU;AAAA,YACV,KAAK;AAAA,YACL,kBAAkB;AAAA,YAClB,OAAO;AAAA,YACP,QAAQ;AAAA,YACR,aAAa;AAAA,YACb,aAAa;AAAA,YACb,aAAa;AAAA,YACb,cAAc;AAAA,YACd,eAAe;AAAA,YACf,mBAAmB,MAAM;AAAA,YACzB,yBAAyB;AAAA,YACzB,yBAAyB;AAAA,YACzB,SAAS;AAAA,UACX;AAAA,QACF;AAAA,QACA,CAAC,GAAG,YAAY,iBAAiB,GAAG;AAAA,UAClC,iBAAiB,MAAM;AAAA,QACzB;AAAA,QACA,CAAC,GAAG,YAAY,eAAe,GAAG;AAAA,UAChC,iBAAiB,MAAM;AAAA,QACzB;AAAA,QACA,CAAC,GAAG,YAAY,iBAAiB,GAAG;AAAA,UAClC,iBAAiB,MAAM;AAAA,QACzB;AAAA,QACA,CAAC,GAAG,YAAY,cAAc,GAAG;AAAA,UAC/B,mBAAmB;AAAA,UACnB,OAAO,MAAM;AAAA,UACb,UAAU,MAAM;AAAA,QAClB;AAAA,MACF;AAAA,IACF,CAAC,GAAG,WAAW,GAAG;AAAA,MAChB,CAAC,GAAG,YAAY,iBAAiB,YAAY,aAAa,GAAG;AAAA,QAC3D,eAAe;AAAA,QACf,mBAAmB,MAAM;AAAA,QACzB,yBAAyB,MAAM;AAAA,QAC/B,mBAAmB;AAAA,MACrB;AAAA,MACA,CAAC,GAAG,YAAY,aAAa,GAAG;AAAA,QAC9B,eAAe;AAAA,QACf,mBAAmB,MAAM;AAAA,QACzB,yBAAyB,MAAM;AAAA,QAC/B,mBAAmB;AAAA,MACrB;AAAA,MACA,CAAC,IAAI,YAAY,gBAAgB,GAAG;AAAA,QAClC,CAAC,GAAG,YAAY,iBAAiB,YAAY,aAAa,GAAG;AAAA,UAC3D,eAAe;AAAA,UACf,mBAAmB,MAAM;AAAA,UACzB,yBAAyB,MAAM;AAAA,QACjC;AAAA,QACA,CAAC,GAAG,YAAY,aAAa,GAAG;AAAA,UAC9B,eAAe;AAAA,UACf,mBAAmB,MAAM;AAAA,UACzB,yBAAyB,MAAM;AAAA,QACjC;AAAA,QACA,CAAC,SAAS,YAAY,UAAU,GAAG;AAAA,UACjC,eAAe;AAAA,QACjB;AAAA,QACA,CAAC,GAAG,eAAe,sBAAsB,YAAY,QAAQ,GAAG;AAAA,UAC9D,WAAW;AAAA,QACb;AAAA,QACA,CAAC,GAAG,eAAe,sBAAsB,eAAe,EAAE,GAAG;AAAA,UAC3D,UAAU;AAAA,UACV,KAAK;AAAA,UACL,SAAS;AAAA,UACT,iBAAiB;AAAA,QACnB;AAAA,MACF;AAAA,MACA,CAAC,GAAG,eAAe,EAAE,GAAG;AAAA,QACtB,UAAU;AAAA,QACV,CAAC,GAAG,eAAe,OAAO,GAAG;AAAA,UAC3B,UAAU;AAAA,UACV,SAAS;AAAA,UACT,QAAQ,MAAM;AAAA,UACd,YAAY,OAAO,MAAM,kBAAkB,IAAI,MAAM,iBAAiB;AAAA,UACtE,sBAAsB;AAAA,UACtB,0BAA0B;AAAA,UAC1B,CAAC,MAAM,eAAe,YAAY,GAAG;AAAA,YACnC,QAAQ,MAAM;AAAA,YACd,QAAQ;AAAA,YACR,sBAAsB;AAAA,YACtB,0BAA0B;AAAA,UAC5B;AAAA,QACF;AAAA,QACA,CAAC,GAAG,eAAe,SAAS,GAAG;AAAA,UAC7B,eAAe;AAAA,QACjB;AAAA,MACF;AAAA;AAAA,MAEA,SAAS;AAAA,QACP,WAAW;AAAA,QACX,CAAC,GAAG,YAAY,WAAW,YAAY,SAAS,eAAe,mBAAmB,GAAG;AAAA,UACnF,WAAW;AAAA,QACb;AAAA,MACF;AAAA,IACF,CAAC;AAAA,IACD,CAAC,GAAG,sBAAsB,EAAE,GAAG;AAAA,MAC7B,UAAU;AAAA,IACZ;AAAA,IACA,CAAC,GAAG,eAAe,EAAE,GAAG,SAAS,SAAS,SAAS,SAAS,CAAC,GAAG,eAAe,KAAK,CAAC,GAAG;AAAA,MACtF,UAAU;AAAA,MACV,KAAK;AAAA,MACL,SAAS,KAAK,MAAM,SAAS;AAAA,MAC7B,OAAO,MAAM;AAAA,MACb,YAAY,GAAG,eAAe;AAAA,MAC9B,YAAY;AAAA,MACZ,iBAAiB,MAAM;AAAA,MACvB,cAAc,MAAM;AAAA,MACpB,CAAC,GAAG,eAAe,OAAO,GAAG;AAAA,QAC3B,OAAO,MAAM;AAAA,MACf;AAAA,MACA,CAAC,GAAG,eAAe,SAAS,GAAG;AAAA,QAC7B,UAAU;AAAA,QACV,KAAK;AAAA,QACL,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,QAAQ,GAAG,oBAAoB,CAAC;AAAA,QAChC,WAAW,MAAM;AAAA,QACjB,iBAAiB;AAAA,QACjB,QAAQ,MAAM;AAAA,MAChB;AAAA,IACF,CAAC,GAAG,kBAAkB,GAAG;AAAA,MACvB,CAAC,IAAI,eAAe,gBAAgB,GAAG;AAAA,QACrC,gBAAgB,CAAC;AAAA,QACjB,oBAAoB;AAAA,QACpB,CAAC,GAAG,eAAe,SAAS,GAAG;AAAA,UAC7B,gBAAgB;AAAA,UAChB,sBAAsB;AAAA,UACtB,qBAAqB;AAAA,QACvB;AAAA,MACF;AAAA,MACA,CAAC,IAAI,eAAe,kBAAkB,GAAG;AAAA,QACvC,kBAAkB,CAAC;AAAA,QACnB,sBAAsB;AAAA,QACtB,CAAC,GAAG,eAAe,SAAS,GAAG;AAAA,UAC7B,kBAAkB;AAAA,UAClB,qBAAqB;AAAA,UACrB,wBAAwB;AAAA,QAC1B;AAAA,MACF;AAAA;AAAA,MAEA,SAAS;AAAA,QACP,WAAW;AAAA,MACb;AAAA,IACF,CAAC;AAAA,EACH;AACF;AAEA,IAAO,gBAAQ,sBAAsB,SAAS,WAAS;AACrD,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,kBAAkB,KAAK,MAAM,WAAW,UAAU;AACxD,QAAM,kBAAkB;AACxB,QAAM,cAAc;AACpB,QAAM,cAAc,kBAAkB,IAAI;AAC1C,QAAM,iBAAiB,MAAM;AAC7B,QAAM,kBAAkB;AACxB,QAAM,gBAAgB;AACtB,QAAM,aAAa,MAAM;AACzB,QAAM,kBAAkB,MAAM;AAC9B,QAAM,gBAAgB;AACtB,QAAM,eAAe,aAAa;AAClC,QAAM,kBAAkB;AACxB,QAAM,kBAAkB,aAAa;AACrC,QAAM,aAAa,MAAW,OAAO;AAAA,IACnC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,kBAAkB;AAAA,IAClB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,yBAAyB;AAAA,IACzB,mBAAmB;AAAA;AAAA,IAEnB,4BAA4B;AAAA,IAC5B,yBAAyB;AAAA,EAC3B,CAAC;AACD,SAAO,CAAC,oBAAoB,UAAU,CAAC;AACzC,CAAC;",
  "names": []
}
